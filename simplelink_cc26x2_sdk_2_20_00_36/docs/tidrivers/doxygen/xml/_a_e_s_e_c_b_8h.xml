<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_a_e_s_e_c_b_8h" kind="file" language="C++">
    <compoundname>AESECB.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="_crypto_key_8h" local="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includedby refid="_a_e_s_e_c_b_c_c26_x_x_8h" local="no">AESECBCC26XX.h</includedby>
    <incdepgraph>
      <node id="102">
        <label>stdbool.h</label>
      </node>
      <node id="104">
        <label>stdint.h</label>
      </node>
      <node id="105">
        <label>ti/drivers/cryptoutils/cryptokey/CryptoKey.h</label>
        <link refid="_crypto_key_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>stddef.h</label>
      </node>
      <node id="101">
        <label>AESECB.h</label>
        <link refid="_a_e_s_e_c_b_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="107">
        <label>AESECBCC26XX.h</label>
        <link refid="_a_e_s_e_c_b_c_c26_x_x_8h"/>
      </node>
      <node id="106">
        <label>AESECB.h</label>
        <link refid="_a_e_s_e_c_b_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_e_s_e_c_b___operation__" prot="public">AESECB_Operation_</innerclass>
    <innerclass refid="struct_a_e_s_e_c_b___config__" prot="public">AESECB_Config_</innerclass>
    <innerclass refid="struct_a_e_s_e_c_b___params__" prot="public">AESECB_Params_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___a_e_s_e_c_b___c_o_n_t_r_o_l_1ga2b81e4bb70e7d17adbe05ac783bdbf04" prot="public" static="no">
        <name>AESECB_CMD_RESERVED</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common AESECB_control command code reservation offset. AESECB driver implementations should offset command codes with AESECB_CMD_RESERVED growing positively</para><para>Example implementation specific command codes: <programlisting><codeline><highlight class="normal">#define<sp/>AESECBXYZ_CMD_COMMAND0<sp/><sp/><sp/><sp/><sp/>AESECB_CMD_RESERVED<sp/>+<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESECBXYZ_CMD_COMMAND1<sp/><sp/><sp/><sp/><sp/>AESECB_CMD_RESERVED<sp/>+<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="285" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_e_s_e_c_b___c_o_n_t_r_o_l_1ga5d1005b6b5eed999a82f89f282bf384f" prot="public" static="no">
        <name>AESECB_STATUS_RESERVED</name>
        <initializer>(-32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common AESECB_control status code reservation offset. AESECB driver implementations should offset status codes with AESECB_STATUS_RESERVED growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>AESECBXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/>AESECB_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESECBXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/>AESECB_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESECBXYZ_STATUS_ERROR2<sp/><sp/><sp/><sp/>AESECB_STATUS_RESERVED<sp/>-<sp/>2</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="299" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_e_s_e_c_b___s_t_a_t_u_s_1ga6dfa9afab09668259531f58273fa4e36" prot="public" static="no">
        <name>AESECB_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESECB_STATUS_SUCCESS if the function was executed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="314" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_e_s_e_c_b___s_t_a_t_u_s_1gab8792e83e4a2350e94b1f2a32d4886a2" prot="public" static="no">
        <name>AESECB_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESECB_STATUS_ERROR if the function was not executed successfully and no more pertinent error code could be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="322" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_e_s_e_c_b___s_t_a_t_u_s_1ga47b06b0e611caf88cae681be4c56e105" prot="public" static="no">
        <name>AESECB_STATUS_UNDEFINEDCMD</name>
        <initializer>(-2)</initializer>
        <briefdescription>
<para>An error status code returned by <ref refid="_a_e_s_e_c_b_8h_1ac59e0fb45736632843a8e43cd2e79575" kindref="member">AESECB_control()</ref> for undefined command codes. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="_a_e_s_e_c_b_8h_1ac59e0fb45736632843a8e43cd2e79575" kindref="member">AESECB_control()</ref> returns AESECB_STATUS_UNDEFINEDCMD if the control code is not recognized by the driver implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="331" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_e_s_e_c_b___s_t_a_t_u_s_1ga5d09cd5661ac53f7ba3141e23fde65a6" prot="public" static="no">
        <name>AESECB_STATUS_RESOURCE_UNAVAILABLE</name>
        <initializer>(-3)</initializer>
        <briefdescription>
<para>An error status code returned if the hardware or software resource is currently unavailable. </para>        </briefdescription>
        <detaileddescription>
<para>AESECB driver implementations may have hardware or software limitations on how many clients can simultaneously perform operations. This status code is returned if the mutual exclusion mechanism signals that an operation cannot currently be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="341" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981a" prot="public" static="no">
        <name>AESECB_ReturnBehavior_</name>
        <enumvalue id="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa945f7703e248cd2d0fc2a08077030e62" prot="public">
          <name>AESECB_RETURN_BEHAVIOR_CALLBACK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will return immediately while the ECB operation goes on in the background. The registered callback function is called after the operation completes. The context the callback function is called (task, HWI, SWI) is implementation-dependent. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa09c85edf8278d95609ef9cda74e21640" prot="public">
          <name>AESECB_RETURN_BEHAVIOR_BLOCKING</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will block while ECB operation goes on in the background. ECB operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa8fb6022bf8730ca0f113fe339b3cf0d3" prot="public">
          <name>AESECB_RETURN_BEHAVIOR_POLLING</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will continuously poll a flag while ECB operation goes on in the background. ECB operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The way in which ECB function calls return after performing an encryption + authentication or decryption + verification operation. </para>        </briefdescription>
        <detaileddescription>
<para>Not all ECB operations exhibit the specified return behavor. Functions that do not require significant computation and cannot offload that computation to a background thread behave like regular functions. Which functions exhibit the specfied return behavior is not implementation dependent. Specifically, a software-backed implementation run on the same CPU as the application will emulate the return behavior while not actually offloading the computation to the background thread.</para><para>AESECB functions exhibiting the specified return behavior have restrictions on the context from which they may be called.</para><para><table rows="4" cols="4"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Task </para></entry><entry thead="yes"><para>Hwi </para></entry><entry thead="yes"><para>Swi  </para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_CALLBACK </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_BLOCKING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para></para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_POLLING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="387" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="387" bodyend="402"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9f" prot="public" static="no">
        <name>AESECB_Mode_</name>
        <enumvalue id="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9fa444b0bc4a6fa39374155fc2f67fc6a94" prot="public">
          <name>AESECB_MODE_ENCRYPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9fa2957e9be6c5c1ce87d927609ce47fb6d" prot="public">
          <name>AESECB_MODE_DECRYPT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the direction of the ECB operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="407" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7" prot="public" static="no">
        <name>AESECB_OperationType_</name>
        <enumvalue id="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7af9c903637981109af6af15c94aaf36b5" prot="public">
          <name>AESECB_OPERATION_TYPE_ENCRYPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7af42ad89357fc2f25e83fb4d7033bc08a" prot="public">
          <name>AESECB_OPERATION_TYPE_DECRYPT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the operation types supported by the driver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="437" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="437" bodyend="440"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" prot="public" static="no">
        <type>struct <ref refid="struct_a_e_s_e_c_b___config__" kindref="compound">AESECB_Config_</ref> *</type>
        <definition>typedef struct AESECB_Config_* AESECB_Handle</definition>
        <argsstring></argsstring>
        <name>AESECB_Handle</name>
        <briefdescription>
<para>A handle that is returned from an <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="364" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a43cf8816fe28d9a4aadeb19ad716be65" prot="public" static="no">
        <type>enum <ref refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981a" kindref="member">AESECB_ReturnBehavior_</ref></type>
        <definition>typedef enum AESECB_ReturnBehavior_  AESECB_ReturnBehavior</definition>
        <argsstring></argsstring>
        <name>AESECB_ReturnBehavior</name>
        <briefdescription>
<para>The way in which ECB function calls return after performing an encryption + authentication or decryption + verification operation. </para>        </briefdescription>
        <detaileddescription>
<para>Not all ECB operations exhibit the specified return behavor. Functions that do not require significant computation and cannot offload that computation to a background thread behave like regular functions. Which functions exhibit the specfied return behavior is not implementation dependent. Specifically, a software-backed implementation run on the same CPU as the application will emulate the return behavior while not actually offloading the computation to the background thread.</para><para>AESECB functions exhibiting the specified return behavior have restrictions on the context from which they may be called.</para><para><table rows="4" cols="4"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Task </para></entry><entry thead="yes"><para>Hwi </para></entry><entry thead="yes"><para>Swi  </para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_CALLBACK </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_BLOCKING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para></para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_POLLING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a63ffb2f4ad66f7981ed41de08d444a29" prot="public" static="no">
        <type>enum <ref refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9f" kindref="member">AESECB_Mode_</ref></type>
        <definition>typedef enum AESECB_Mode_  AESECB_Mode</definition>
        <argsstring></argsstring>
        <name>AESECB_Mode</name>
        <briefdescription>
<para>Enum for the direction of the ECB operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a0aa5948ef2d83d659861aff16ddf95cb" prot="public" static="no">
        <type>struct <ref refid="struct_a_e_s_e_c_b___operation__" kindref="compound">AESECB_Operation_</ref></type>
        <definition>typedef struct AESECB_Operation_  AESECB_Operation</definition>
        <argsstring></argsstring>
        <name>AESECB_Operation</name>
        <briefdescription>
<para>Struct containing the parameters required for encrypting/decrypting and a message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a6b3d4d7c2079015bd053e3a977e743d6" prot="public" static="no">
        <type>enum <ref refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7" kindref="member">AESECB_OperationType_</ref></type>
        <definition>typedef enum AESECB_OperationType_  AESECB_OperationType</definition>
        <argsstring></argsstring>
        <name>AESECB_OperationType</name>
        <briefdescription>
<para>Enum for the operation types supported by the driver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="440" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a5b0240a11da9753290532045e222618a" prot="public" static="no">
        <type>struct <ref refid="struct_a_e_s_e_c_b___config__" kindref="compound">AESECB_Config_</ref></type>
        <definition>typedef struct AESECB_Config_  AESECB_Config</definition>
        <argsstring></argsstring>
        <name>AESECB_Config</name>
        <briefdescription>
<para>AESECB Global configuration. </para>        </briefdescription>
        <detaileddescription>
<para>The AESECB_Config structure contains a set of pointers used to characterize the AESECB driver implementation.</para><para>This structure needs to be defined before calling <ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref> and it must not be changed thereafter.</para><para><simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* AESECB_CallbackFxn) (AESECB_Handle handle, int_fast16_t returnValue, AESECB_Operation *operation, AESECB_OperationType operationType)</definition>
        <argsstring>)(AESECB_Handle handle, int_fast16_t returnValue, AESECB_Operation *operation, AESECB_OperationType operationType)</argsstring>
        <name>AESECB_CallbackFxn</name>
        <briefdescription>
<para>The definition of a callback function used by the AESECB driver when used in <ref refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa945f7703e248cd2d0fc2a08077030e62" kindref="member">AESECB_RETURN_BEHAVIOR_CALLBACK</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the client that started the ECB operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The result of the CCM operation. May contain an error code. Informs the application of why the callback function was called.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an operation struct.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>This parameter determines which operation the callback refers to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="476" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" prot="public" static="no">
        <type>struct <ref refid="struct_a_e_s_e_c_b___params__" kindref="compound">AESECB_Params_</ref></type>
        <definition>typedef struct AESECB_Params_  AESECB_Params</definition>
        <argsstring></argsstring>
        <name>AESECB_Params</name>
        <briefdescription>
<para>ECB Parameters. </para>        </briefdescription>
        <detaileddescription>
<para>ECB Parameters are used to with the <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> call. Default values for these parameters are set using <ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref>.</para><para><simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="498" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_e_s_e_c_b_8h_1a7a7eab07a0ed40f1e9320f973a74fb8e" prot="public" static="no" mutable="no">
        <type>const <ref refid="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" kindref="member">AESECB_Params</ref></type>
        <definition>const AESECB_Params AESECB_defaultParams</definition>
        <argsstring></argsstring>
        <name>AESECB_defaultParams</name>
        <briefdescription>
<para>Default AESECB_Params structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="505" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_init</definition>
        <argsstring>(void)</argsstring>
        <name>AESECB_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the ECB module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The AESECB_config structure must exist and be persistent before this function can be called. This function must also be called before any other ECB driver APIs. This function call does not modify any peripheral registers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_Params_init</definition>
        <argsstring>(AESECB_Params *params)</argsstring>
        <name>AESECB_Params_init</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" kindref="member">AESECB_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the AESECB_Params struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to AESECB_Params structure for initialization</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are: returnBehavior = AESECB_RETURN_BEHAVIOR_BLOCKING callbackFxn = NULL timeout = SemaphoreP_WAIT_FOREVER custom = NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" kindref="member">AESECB_Handle</ref></type>
        <definition>AESECB_Handle AESECB_open</definition>
        <argsstring>(uint_least8_t index, AESECB_Params *params)</argsstring>
        <name>AESECB_open</name>
        <param>
          <type>uint_least8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" kindref="member">AESECB_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>This function opens a given ECB peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>ECB controller has been initialized using <ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical peripheral number for the ECB indexed into the AESECB_config table</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an parameter block, if NULL it will use default values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An AESECB_Handle on success or a NULL on an error or if it has been opened already.</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" kindref="member">AESECB_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_close</definition>
        <argsstring>(AESECB_Handle handle)</argsstring>
        <name>AESECB_close</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close an ECB peripheral specified by the ECB handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> has to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An ECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1ac59e0fb45736632843a8e43cd2e79575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESECB_control</definition>
        <argsstring>(AESECB_Handle handle, uint32_t cmd, void *args)</argsstring>
        <name>AESECB_control</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Function performs implementation specific features on a given AESECB_Handle. </para>        </briefdescription>
        <detaileddescription>
<para>Commands for AESECB_control can originate from <ref refid="_a_e_s_e_c_b_8h" kindref="compound">AESECB.h</ref> or from implementation specific AESECB*.h (<emphasis><ref refid="_a_e_s_e_c_b_c_c26_x_x_8h" kindref="compound">AESECBCC26XX.h</ref></emphasis>, <emphasis>AESECBMSP432.h</emphasis>, etc.. ) files. While commands from <ref refid="_a_e_s_e_c_b_8h" kindref="compound">AESECB.h</ref> are API portable across driver implementations, not all implementations may support all these commands. Conversely, commands from driver implementation specific AESECB*.h files add unique driver capabilities but are not API portable across all AESECB driver implementations.</para><para>Commands supported by <ref refid="_a_e_s_e_c_b_8h" kindref="compound">AESECB.h</ref> follow an AESECB_CMD_&lt;cmd&gt; naming convention.<linebreak/>
 Commands supported by AESECB*.h follow an AESECB*_CMD_&lt;cmd&gt; naming convention.<linebreak/>
 Each control command defines <bold>arg</bold> differently. The types of <bold>arg</bold> are documented with each command.</para><para>See <ref refid="group___a_e_s_e_c_b___c_m_d" kindref="compound">AESECB_control command codes</ref> for command codes.</para><para>See <ref refid="group___a_e_s_e_c_b___s_t_a_t_u_s" kindref="compound">AESECB_control return status codes</ref> for status codes.</para><para><simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> has to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An AESECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="_a_e_s_e_c_b_8h" kindref="compound">AESECB.h</ref> or AESECB*.h commands.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional R/W (read/write) command argument accompanied with cmd</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Implementation specific return codes. Negative values indicate unsuccessful operations.</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_Operation_init</definition>
        <argsstring>(AESECB_Operation *operationStruct)</argsstring>
        <name>AESECB_Operation_init</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a0aa5948ef2d83d659861aff16ddf95cb" kindref="member">AESECB_Operation</ref> *</type>
          <declname>operationStruct</declname>
        </param>
        <briefdescription>
<para>Function to initialize an AESECB_Operation struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>operationStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to AESECB_Operation structure for initialization</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are all zeros. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a8b760e2e52d714c3fb8faf74feb38b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESECB_oneStepEncrypt</definition>
        <argsstring>(AESECB_Handle handle, AESECB_Operation *operation)</argsstring>
        <name>AESECB_oneStepEncrypt</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a0aa5948ef2d83d659861aff16ddf95cb" kindref="member">AESECB_Operation</ref> *</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
<para>Function to perform an AESECB encryption operation in one call. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>None of the buffers provided as arguments may be altered by the application during an ongoing operation. Doing so can yield corrupted ciphertext or incorrect authentication.</para></simplesect>
<simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> and <ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init()</ref> have to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An ECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct containing the parameters required to perform the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1abdd64e5e2b446ef0b884f9d3862d0463" kindref="member">AESECB_oneStepDecrypt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1abdd64e5e2b446ef0b884f9d3862d0463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESECB_oneStepDecrypt</definition>
        <argsstring>(AESECB_Handle handle, AESECB_Operation *operation)</argsstring>
        <name>AESECB_oneStepDecrypt</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a0aa5948ef2d83d659861aff16ddf95cb" kindref="member">AESECB_Operation</ref> *</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
<para>Function to perform an AESECB decryption in one call. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>None of the buffers provided as arguments may be altered by the application during an ongoing operation. Doing so can yield corrupted plaintext or incorrectly failed verification.</para></simplesect>
<simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> and <ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init()</ref> have to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An ECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct containing the parameters required to perform the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A status code</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a8b760e2e52d714c3fb8faf74feb38b3a" kindref="member">AESECB_oneStepEncrypt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h" line="646" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AESECB driver header. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><simplesect kind="warning"><para>This is a beta API. It may change in future releases.</para></simplesect>
<heading level="1">Overview</heading>
</para><para>The Electronic Code Book (ECB) mode of operation is a generic encryption block cipher mode. It can be used with any block cipher. AESECB encrypts or decrypts one or multiple blocks of plaintext or ciphertext using the Advanced Encryption Standard (AES) block cipher. Each input block is individually encrypted or decrypted. This means that blocks of ciphertext can be decrypted individually and out of order. Encrypting the same plaintext using the same key yields identical ciphertext. This raises several security issues. For this reason, it is not recommended that ECB be used unless interfacing with unupdatable legacy systems or where a standard specifies its use. Better alternatives would be an authenticated encryption with associated data (AEAD) mode such as CCM or GCM.</para><para>The AES key is a shared secret between the two parties and has a length of 128, 192, or 256 bits.</para><para><heading level="1">Usage</heading>
</para><para><heading level="2">Before starting an ECB operation</heading>
</para><para>Before starting an ECB operation, the application must do the following:<itemizedlist>
<listitem><para>Call <ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref> to initialize the driver</para></listitem><listitem><para>Call <ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref> to initialize the AESECB_Params to default values.</para></listitem><listitem><para>Modify the AESECB_Params as desired</para></listitem><listitem><para>Call <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> to open an instance of the driver</para></listitem><listitem><para>Initialize a CryptoKey. These opaque datastructures are representations of keying material and its storage. Depending on how the keying material is stored (RAM or flash, key store, key blob), the CryptoKey must be initialized differently. The AESECB API can handle all types of CryptoKey. However, not all device-specific implementions support all types of CryptoKey. Devices without a key store will not support CryptoKeys with keying material stored in a key store for example. All devices support plaintext CryptoKeys.</para></listitem><listitem><para>Initialize the AESECB_Operation using <ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init()</ref> and set all length, key, and buffer fields.</para></listitem></itemizedlist>
</para><para><heading level="2">Starting an ECB operation</heading>
</para><para>The AESECB_oneStepEncrypt and AESECB_oneStepDecrypt functions do an ECB operation in a single call. They will always be the most highly optimized routines with the least overhead and the fastest runtime. Since ECB plaintext blocks are simply encrypted with the block cipher block by block, there is no difference in the ciphertext between encrypting two blocks in one go or encypting each block individually.</para><para><heading level="2">After the ECB operation completes</heading>
</para><para>After the ECB operation completes, the application should either start another operation or close the driver by calling <ref refid="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" kindref="member">AESECB_close()</ref></para><para><heading level="2">AESECB Driver Configuration</heading>
</para><para>In order to use the AESECB APIs, the application is required to provide device-specific AESECB configuration in the Board.c file. The AESECB driver interface defines a configuration data structure:</para><para><programlisting><codeline><highlight class="normal">typedef<sp/>struct<sp/>AESECB_Config_<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*object;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><sp/><sp/><sp/>*hwAttrs;</highlight></codeline>
<codeline><highlight class="normal">}<sp/>AESECB_Config;</highlight></codeline>
</programlisting></para><para>The application must declare an array of AESECB_Config elements, named AESECB_config[]. Each element of AESECB_config[] must be populated with pointers to a device specific AESECB driver implementation&apos;s driver object and hardware attributes. The hardware attributes define properties such as the AESECB peripheral&apos;s base address. Each element in AESECB_config[] corresponds to an AESECB instance and none of the elements should have NULL pointers. There is no correlation between the index and the peripheral designation (such as AESECB0 or AESECB1). For example, it is possible to use AESECB_config[0] for AESECB1. Multiple drivers and driver instances may all access the same underlying hardware. This is transparent to the application. Mutual exclusion is performed automatically by the drivers as necessary.</para><para>Because the AESECB configuration is very device dependent, you will need to check the doxygen for the device specific AESECB implementation. There you will find a description of the AESECB hardware attributes. Please also refer to the Board.c file of any of your examples to see the AESECB configuration.</para><para><heading level="2">AESECB Parameters</heading>
</para><para>The <ref refid="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" kindref="member">AESECB_Params</ref> structure is passed to the <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> call. If NULL is passed for the parameters, <ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open()</ref> uses default parameters. An <ref refid="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" kindref="member">AESECB_Params</ref> structure is initialized with default values by passing it to <ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref>.</para><para><heading level="2">Examples</heading>
</para><para>### Encyption of multiple plaintext blocks in blocking mode # <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/types/cryptoKey/CryptoKey_Plaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline><highlight class="normal">int_fast16_t<sp/>encryptionResult;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>plaintext[]<sp/>=<sp/>{0x6b,<sp/>0xc1,<sp/>0xbe,<sp/>0xe2,<sp/>0x2e,<sp/>0x40,<sp/>0x9f,<sp/>0x96,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe9,<sp/>0x3d,<sp/>0x7e,<sp/>0x11,<sp/>0x73,<sp/>0x93,<sp/>0x17,<sp/>0x2a,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xae,<sp/>0x2d,<sp/>0x8a,<sp/>0x57,<sp/>0x1e,<sp/>0x03,<sp/>0xac,<sp/>0x9c,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x9e,<sp/>0xb7,<sp/>0x6f,<sp/>0xac,<sp/>0x45,<sp/>0xaf,<sp/>0x8e,<sp/>0x51};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ciphertext[sizof(plaintext)];</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>keyingMaterial[16]<sp/>=<sp/>{0x2b,<sp/>0x7e,<sp/>0x15,<sp/>0x16,<sp/>0x28,<sp/>0xae,<sp/>0xd2,<sp/>0xa6,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xab,<sp/>0xf7,<sp/>0x15,<sp/>0x88,<sp/>0x09,<sp/>0xcf,<sp/>0x4f,<sp/>0x3c}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>AESECB_open(0,<sp/>NULL);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Operation<sp/>operation;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">encryptionResult<sp/>=<sp/>AESECB_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(encryptionResult<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>resultant<sp/>ciphertext<sp/>should<sp/>be:</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0x3a,<sp/>0xd7,<sp/>0x7b,<sp/>0xb4,<sp/>0x0d,<sp/>0x7a,<sp/>0x36,<sp/>0x60,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xa8,<sp/>0x9e,<sp/>0xca,<sp/>0xf3,<sp/>0x24,<sp/>0x66,<sp/>0xef,<sp/>0x97,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xf5,<sp/>0xd3,<sp/>0xd5,<sp/>0x85,<sp/>0x03,<sp/>0xb9,<sp/>0x69,<sp/>0x9d,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xe7,<sp/>0x85,<sp/>0x89,<sp/>0x5a,<sp/>0x96,<sp/>0xfd,<sp/>0xba,<sp/>0xaf</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_close(handle);</highlight></codeline>
</programlisting></para><para><heading level="3">Single call ECB decryption in callback mode</heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ciphertext[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0xf3,<sp/>0xee,<sp/>0xd1,<sp/>0xbd,<sp/>0xb5,<sp/>0xd2,<sp/>0xa0,<sp/>0x3c,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x06,<sp/>0x4b,<sp/>0x5a,<sp/>0x7e,<sp/>0x3d,<sp/>0xb1,<sp/>0x81,<sp/>0xf8};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>keyingMaterial[32]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x60,<sp/>0x3d,<sp/>0xeb,<sp/>0x10,<sp/>0x15,<sp/>0xca,<sp/>0x71,<sp/>0xbe,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2b,<sp/>0x73,<sp/>0xae,<sp/>0xf0,<sp/>0x85,<sp/>0x7d,<sp/>0x77,<sp/>0x81,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1f,<sp/>0x35,<sp/>0x2c,<sp/>0x07,<sp/>0x3b,<sp/>0x61,<sp/>0x08,<sp/>0xd7,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2d,<sp/>0x98,<sp/>0x10,<sp/>0xa3,<sp/>0x09,<sp/>0x14,<sp/>0xdf,<sp/>0xf4};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>plaintext[sizeof(ciphertext)];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>plaintext<sp/>should<sp/>be<sp/>the<sp/>following<sp/>after<sp/>the<sp/>decryption<sp/>operation:</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0x6b,<sp/>0xc1,<sp/>0xbe,<sp/>0xe2,<sp/>0x2e,<sp/>0x40,<sp/>0x9f,<sp/>0x96,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xe9,<sp/>0x3d,<sp/>0x7e,<sp/>0x11,<sp/>0x73,<sp/>0x93,<sp/>0x17,<sp/>0x2a,</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>ecbCallback(AESECB_Handle<sp/>handle,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Operation<sp/>*operation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB_OperationType<sp/>operationType)<sp/>{</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(returnValue<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_Operation<sp/>operation;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>ecbStartFunction(void)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Params<sp/>params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int_fast16_t<sp/>decryptionResult;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.returnBehavior<sp/>=<sp/>AESECB_RETURN_BEHAVIOR_CALLBACK;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>ecbCallback;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESECB_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>decryptionResult<sp/>=<sp/>AESECB_oneStepDecrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(decryptionResult<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>do<sp/>other<sp/>things<sp/>while<sp/>ECB<sp/>operation<sp/>completes<sp/>in<sp/>the<sp/>background</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017-2018,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_AESECB__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_AESECB__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_crypto_key_8h" kindref="compound">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group___a_e_s_e_c_b___c_o_n_t_r_o_l_1ga2b81e4bb70e7d17adbe05ac783bdbf04" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_CMD_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group___a_e_s_e_c_b___c_o_n_t_r_o_l_1ga5d1005b6b5eed999a82f89f282bf384f" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group___a_e_s_e_c_b___s_t_a_t_u_s_1ga6dfa9afab09668259531f58273fa4e36" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="group___a_e_s_e_c_b___s_t_a_t_u_s_1gab8792e83e4a2350e94b1f2a32d4886a2" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group___a_e_s_e_c_b___s_t_a_t_u_s_1ga47b06b0e611caf88cae681be4c56e105" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_UNDEFINEDCMD<sp/><sp/><sp/><sp/>(-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group___a_e_s_e_c_b___s_t_a_t_u_s_1ga5d09cd5661ac53f7ba3141e23fde65a6" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_RESOURCE_UNAVAILABLE<sp/>(-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="comment">/*<sp/>Add<sp/>AESECB_CMD_&lt;commands&gt;<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_e_s_e_c_b___config__" kindref="compound">AESECB_Config_</ref><sp/><sp/><sp/><sp/>*<ref refid="_a_e_s_e_c_b_8h_1aca185011358823a4bbcd0c8f950bc960" kindref="member">AESECB_Handle</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981a" kindref="member">AESECB_ReturnBehavior_</ref><sp/>{</highlight></codeline>
<codeline lineno="388" refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa945f7703e248cd2d0fc2a08077030e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa945f7703e248cd2d0fc2a08077030e62" kindref="member">AESECB_RETURN_BEHAVIOR_CALLBACK</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394" refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa09c85edf8278d95609ef9cda74e21640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa09c85edf8278d95609ef9cda74e21640" kindref="member">AESECB_RETURN_BEHAVIOR_BLOCKING</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398" refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa8fb6022bf8730ca0f113fe339b3cf0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a4f72d10dea0dcaa6d8cee8de8eb0981aa8fb6022bf8730ca0f113fe339b3cf0d3" kindref="member">AESECB_RETURN_BEHAVIOR_POLLING</ref><sp/><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a43cf8816fe28d9a4aadeb19ad716be65" kindref="member">AESECB_ReturnBehavior</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9f" kindref="member">AESECB_Mode_</ref><sp/>{</highlight></codeline>
<codeline lineno="408" refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9fa444b0bc4a6fa39374155fc2f67fc6a94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9fa444b0bc4a6fa39374155fc2f67fc6a94" kindref="member">AESECB_MODE_ENCRYPT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="409" refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9fa2957e9be6c5c1ce87d927609ce47fb6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1aa3b7be874253e102ae98dd23c9319e9fa2957e9be6c5c1ce87d927609ce47fb6d" kindref="member">AESECB_MODE_DECRYPT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a63ffb2f4ad66f7981ed41de08d444a29" kindref="member">AESECB_Mode</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="struct_a_e_s_e_c_b___operation__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_e_s_e_c_b___operation__" kindref="compound">AESECB_Operation_</ref><sp/>{</highlight></codeline>
<codeline lineno="417" refid="struct_a_e_s_e_c_b___operation___1af4c69e3e63f9b1a58ea0e5023e169456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_crypto_key__" kindref="compound">CryptoKey</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___operation___1af4c69e3e63f9b1a58ea0e5023e169456" kindref="member">key</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418" refid="struct_a_e_s_e_c_b___operation___1aa0e01886152511f41da7ae4d750ade7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___operation___1aa0e01886152511f41da7ae4d750ade7e" kindref="member">input</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423" refid="struct_a_e_s_e_c_b___operation___1a66e39e70d1fe17ebea21b91fcd87cc5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___operation___1a66e39e70d1fe17ebea21b91fcd87cc5b" kindref="member">output</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429" refid="struct_a_e_s_e_c_b___operation___1af3b53823e40fd824e2b693202b24a9d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___operation___1af3b53823e40fd824e2b693202b24a9d0" kindref="member">inputLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a0aa5948ef2d83d659861aff16ddf95cb" kindref="member">AESECB_Operation</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7" kindref="member">AESECB_OperationType_</ref><sp/>{</highlight></codeline>
<codeline lineno="438" refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7af9c903637981109af6af15c94aaf36b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7af9c903637981109af6af15c94aaf36b5" kindref="member">AESECB_OPERATION_TYPE_ENCRYPT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="439" refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7af42ad89357fc2f25e83fb4d7033bc08a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a00e385048eba5991c317d9b771789be7af42ad89357fc2f25e83fb4d7033bc08a" kindref="member">AESECB_OPERATION_TYPE_DECRYPT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a6b3d4d7c2079015bd053e3a977e743d6" kindref="member">AESECB_OperationType</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="struct_a_e_s_e_c_b___config__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_e_s_e_c_b___config__" kindref="compound">AESECB_Config_</ref><sp/>{</highlight></codeline>
<codeline lineno="455" refid="struct_a_e_s_e_c_b___config___1a560351ad7ffe300a7e993f194366e6f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___config___1a560351ad7ffe300a7e993f194366e6f5" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="struct_a_e_s_e_c_b___config___1aa17a92ee782df93ff276eadf1a0daeb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_e_s_e_c_b___config___1aa17a92ee782df93ff276eadf1a0daeb1" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a5b0240a11da9753290532045e222618a" kindref="member">AESECB_Config</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" kindref="member">AESECB_CallbackFxn</ref>)<sp/>(AESECB_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___operation__" kindref="compound">AESECB_Operation</ref><sp/>*operation,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a6b3d4d7c2079015bd053e3a977e743d6" kindref="member">AESECB_OperationType</ref><sp/>operationType);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="struct_a_e_s_e_c_b___params__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_e_s_e_c_b___params__" kindref="compound">AESECB_Params_</ref><sp/>{</highlight></codeline>
<codeline lineno="490" refid="struct_a_e_s_e_c_b___params___1a9cbbd764090d5fb6f0bcaa2e4ada976a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a43cf8816fe28d9a4aadeb19ad716be65" kindref="member">AESECB_ReturnBehavior</ref><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___params___1a9cbbd764090d5fb6f0bcaa2e4ada976a" kindref="member">returnBehavior</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491" refid="struct_a_e_s_e_c_b___params___1a5767eed05a8d8c5a8830446f524748cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" kindref="member">AESECB_CallbackFxn</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___params___1a5767eed05a8d8c5a8830446f524748cf" kindref="member">callbackFxn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492" refid="struct_a_e_s_e_c_b___params___1a538ff251e3bb2c3b6e548941d2d9f536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___params___1a538ff251e3bb2c3b6e548941d2d9f536" kindref="member">timeout</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495" refid="struct_a_e_s_e_c_b___params___1a8a9d396802c51d3b0c6c3be4f0e6fad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___params___1a8a9d396802c51d3b0c6c3be4f0e6fad3" kindref="member">custom</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a257708194f9c44237ba4195fe5153ac1" kindref="member">AESECB_Params</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_e_c_b___params__" kindref="compound">AESECB_Params</ref><sp/><ref refid="_a_e_s_e_c_b_8h_1a7a7eab07a0ed40f1e9320f973a74fb8e" kindref="member">AESECB_defaultParams</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init</ref>(<ref refid="struct_a_e_s_e_c_b___params__" kindref="compound">AESECB_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">AESECB_Handle<sp/><ref refid="_a_e_s_e_c_b_8h_1aa09623a2b4bc9cfa608865bc502ca10e" kindref="member">AESECB_open</ref>(uint_least8_t<sp/>index,<sp/><ref refid="struct_a_e_s_e_c_b___params__" kindref="compound">AESECB_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" kindref="member">AESECB_close</ref>(AESECB_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_e_c_b_8h_1ac59e0fb45736632843a8e43cd2e79575" kindref="member">AESECB_control</ref>(AESECB_Handle<sp/>handle,<sp/>uint32_t<sp/>cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init</ref>(<ref refid="struct_a_e_s_e_c_b___operation__" kindref="compound">AESECB_Operation</ref><sp/>*operationStruct);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_e_c_b_8h_1a8b760e2e52d714c3fb8faf74feb38b3a" kindref="member">AESECB_oneStepEncrypt</ref>(AESECB_Handle<sp/>handle,<sp/><ref refid="struct_a_e_s_e_c_b___operation__" kindref="compound">AESECB_Operation</ref><sp/>*operation);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_e_c_b_8h_1abdd64e5e2b446ef0b884f9d3862d0463" kindref="member">AESECB_oneStepDecrypt</ref>(AESECB_Handle<sp/>handle,<sp/><ref refid="struct_a_e_s_e_c_b___operation__" kindref="compound">AESECB_Operation</ref><sp/>*operation);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_AESECB__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/AESECB.h"/>
  </compounddef>
</doxygen>
