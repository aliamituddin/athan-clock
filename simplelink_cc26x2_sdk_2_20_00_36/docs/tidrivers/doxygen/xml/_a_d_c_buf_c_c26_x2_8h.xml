<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_a_d_c_buf_c_c26_x2_8h" kind="file" language="C++">
    <compoundname>ADCBufCC26X2.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_a_d_c_buf_8h" local="no">ti/drivers/ADCBuf.h</includes>
    <includes refid="_p_i_n_8h" local="no">ti/drivers/PIN.h</includes>
    <includes refid="_p_i_n_c_c26_x_x_8h" local="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes refid="_u_d_m_a_c_c26_x_x_8h" local="no">ti/drivers/dma/UDMACC26XX.h</includes>
    <includes refid="_g_p_timer_c_c26_x_x_8h" local="no">ti/drivers/timer/GPTimerCC26XX.h</includes>
    <includes refid="_power_8h" local="no">ti/drivers/Power.h</includes>
    <includes refid="_power_c_c26_x2_8h" local="no">ti/drivers/power/PowerCC26X2.h</includes>
    <includes local="no">ti/devices/DeviceFamily.h</includes>
    <includes local="no">DeviceFamily_constructPath(driverlib/aux_adc.h)</includes>
    <includes local="no">ti/drivers/dpl/HwiP.h</includes>
    <includes local="no">ti/drivers/dpl/ClockP.h</includes>
    <includes local="no">ti/drivers/dpl/SemaphoreP.h</includes>
    <includes local="no">ti/drivers/dpl/SwiP.h</includes>
    <incdepgraph>
      <node id="12">
        <label>stdbool.h</label>
      </node>
      <node id="24">
        <label>ti/drivers/power/PowerCC26XX.h</label>
        <link refid="_power_c_c26_x_x_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdint.h</label>
      </node>
      <node id="23">
        <label>ti/drivers/utils/List.h</label>
        <link refid="_list_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ti/drivers/dpl/SemaphoreP.h</label>
      </node>
      <node id="30">
        <label>DeviceFamily_constructPath(driverlib/event.h)</label>
      </node>
      <node id="31">
        <label>DeviceFamily_constructPath(driverlib/timer.h)</label>
      </node>
      <node id="10">
        <label>ADCBufCC26X2.h</label>
        <link refid="_a_d_c_buf_c_c26_x2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ti/drivers/timer/GPTimerCC26XX.h</label>
        <link refid="_g_p_timer_c_c26_x_x_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stddef.h</label>
      </node>
      <node id="14">
        <label>ti/drivers/PIN.h</label>
        <link refid="_p_i_n_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>DeviceFamily_constructPath(inc/hw_gpt.h)</label>
      </node>
      <node id="13">
        <label>ti/drivers/ADCBuf.h</label>
        <link refid="_a_d_c_buf_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ti/devices/DeviceFamily.h</label>
      </node>
      <node id="17">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="25">
        <label>ti/drivers/dpl/ClockP.h</label>
      </node>
      <node id="20">
        <label>DeviceFamily_constructPath(driverlib/gpio.h)</label>
      </node>
      <node id="26">
        <label>DeviceFamily_constructPath(inc/hw_types.h)</label>
      </node>
      <node id="27">
        <label>DeviceFamily_constructPath(driverlib/udma.h)</label>
      </node>
      <node id="35">
        <label>ti/drivers/dpl/SwiP.h</label>
      </node>
      <node id="21">
        <label>ti/drivers/dma/UDMACC26XX.h</label>
        <link refid="_u_d_m_a_c_c26_x_x_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ti/drivers/Power.h</label>
        <link refid="_power_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ti/drivers/power/PowerCC26X2.h</label>
        <link refid="_power_c_c26_x2_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>DeviceFamily_constructPath(driverlib/aux_adc.h)</label>
      </node>
      <node id="15">
        <label>ti/drivers/pin/PINCC26XX.h</label>
        <link refid="_p_i_n_c_c26_x_x_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>DeviceFamily_constructPath(driverlib/ioc.h)</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry" prot="public">ADCBufCC26X2_AdcChannelLutEntry</innerclass>
    <innerclass refid="struct_a_d_c_buf_c_c26_x2___params_extension" prot="public">ADCBufCC26X2_ParamsExtension</innerclass>
    <innerclass refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs" prot="public">ADCBufCC26X2_HWAttrs</innerclass>
    <innerclass refid="struct_a_d_c_buf_c_c26_x2___object" prot="public">ADCBufCC26X2_Object</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1gad718c3bba0f5e4319c9b09e7bf5dc3ba" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_ACQUIRE_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_b_u_f___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 1</initializer>
        <briefdescription>
<para>This control function acquires the semaphore that arbitrates access to the ADC between the CM3 and the sensor controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function pre-acquires the ADC semaphore before <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> is called by the application. Normally, the ADC driver acquires the ADC semaphore when calling ADCBufCC26X2_convert(). The driver may need to wait for the sensor controller to release the semaphore in order to access the ADC hardware module. Consequently, the time at which the conversion is actually made is normally non-deterministic. Pre-acquiring the semaphore makes the <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> call deterministic.</para><para><simplesect kind="note"><para>This function returns an error if the handle is not open or a transfer is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="321" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga297e57ceef7d21efad09a4c9f8cc5e9a" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_b_u_f___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 2</initializer>
        <briefdescription>
<para>This function makes the ADC driver keep the ADC semaphore until released. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function will make the ADC driver keep the ADC semaphore until it is released by the application by calling the control function ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE. This enables multiple deterministic conversions to be made. Usually, the driver will release the semaphore after the conversion finishes.</para><para><simplesect kind="warning"><para>The sensor controller can no longer access the ADC until the semaphore is released by the application manually.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___a_d_c_buf___c_m_d_1gadd5ecbab7264c2cd7b29d9d8e5736387" kindref="member">ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="336" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1gadd5ecbab7264c2cd7b29d9d8e5736387" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
        <initializer><ref refid="group___a_d_c_b_u_f___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 3</initializer>
        <briefdescription>
<para>This function makes the ADC driver no longer keep the ADC semaphore until released. </para>        </briefdescription>
        <detaileddescription>
<para>This function effectively reverses a call to ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE.</para><para><simplesect kind="see"><para><ref refid="group___a_d_c_buf___c_m_d_1ga297e57ceef7d21efad09a4c9f8cc5e9a" kindref="member">ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="345" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga760d6e0d9c8d79bd7fadbd1e72204ce8" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_b_u_f___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 4</initializer>
        <briefdescription>
<para>This function releases the ADC semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function returns an error if the handle is not open or a transfer is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="352" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_c_buf_c_c26_x2_8h_1a85bd850ff22f7dd780deeddc49ad4896" prot="public" static="no">
        <name>ADCBufCC26X2_RESOLUTION</name>
        <initializer>12</initializer>
        <briefdescription>
<para>Resolution in bits of the CC26X2 ADC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="359" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_d_c_buf_c_c26_x2_8h_1a403ad240860839ba81d9334ca9319516" prot="public" static="no">
        <name>ADCBufCC26X2_BYTES_PER_SAMPLE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="361" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69" prot="public" static="no">
        <name>ADCBufCC26X2_Sampling_Mode</name>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69ac9b4b759255867b6f0ebe762ebfe830e" prot="public">
          <name>ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69af0ec7f9f4bc4bd7481b385536144ad97" prot="public">
          <name>ADCBufCC26X2_SAMPING_MODE_ASYNCHRONOUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifies whether the internal reference of the ADC is sourced from the battery voltage or a fixed internal source. </para>        </briefdescription>
        <detaileddescription>
<para>The CC26X2 ADC can operate in two different ways with regards to the sampling phase of the ADC conversion process:<itemizedlist>
<listitem><para>It can spend a fixed amount of time sampling the signal after getting the start conversion trigger.</para></listitem><listitem><para>It can constantly keep sampling and immediately start the conversion process after getting the trigger.</para></listitem></itemizedlist>
</para><para>In ADCBufCC26X2_SYNCHRONOUS mode, the ADC goes into IDLE in between conversions and uses less power. The minimum sample time for full precision in ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS is dependent on the input load. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="389" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="389" bodyend="392"/>
      </memberdef>
      <memberdef kind="enum" id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246" prot="public" static="no">
        <name>ADCBufCC26X2_Sampling_Duration</name>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a91e405f674127ff3e12c216f1c7649f6" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_2P7_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_2P7_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246ac56fec68c59ad8cea8c224aaed9d2b65" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_5P3_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_5P3_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246adea25b2e39702800bc558405572ed5a3" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_10P6_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_10P6_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246ac2c293912608c1944a3508599973c5c2" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_21P3_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_21P3_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246add4b91f1736496c609198cf43b4bd0b5" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_42P6_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_42P6_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a3728f65eb3cb5c35e4bfb96ce43716c2" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_85P3_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_85P3_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a9edd384603324a422cfcdf58fe364fe0" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_170_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_170_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246aa95cadf2f1f90afd154397f0b0888bb2" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_341_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_341_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a4959e22c7fdefe3ab297185673d3f7b2" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_682_US</name>
          <initializer>= AUXADC_SAMPLE_TIME_682_US</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246aa597af33dd27ab3f398c4d600b61b54e" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_1P37_MS</name>
          <initializer>= AUXADC_SAMPLE_TIME_1P37_MS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a918f6e52bf0d77ff10e01448b2b52dc5" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_2P73_MS</name>
          <initializer>= AUXADC_SAMPLE_TIME_2P73_MS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a22a23e9a9c76d01a42fbc0f81bef029d" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_5P46_MS</name>
          <initializer>= AUXADC_SAMPLE_TIME_5P46_MS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a244f0103dc68974ffd332ed9cee75be8" prot="public">
          <name>ADCBufCC26X2_SAMPLING_DURATION_10P9_MS</name>
          <initializer>= AUXADC_SAMPLE_TIME_10P9_MS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Amount of time the ADC spends sampling the analogue input. </para>        </briefdescription>
        <detaileddescription>
<para>The analogue to digital conversion process consists of two phases in the CC26X2 ADC, the sampling and conversion phases. During the sampling phase, the ADC samples the analogue input signal. Larger input loads require longer sample times for the most accurate results. In ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS mode, this enum specifies the sampling times available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="402" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="402" bodyend="416"/>
      </memberdef>
      <memberdef kind="enum" id="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3" prot="public" static="no">
        <name>ADCBufCC26X2_Reference_Source</name>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3a61614365f7815f3522749e80932b6c95" prot="public">
          <name>ADCBufCC26X2_FIXED_REFERENCE</name>
          <initializer>= AUXADC_REF_FIXED</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3a03b5c4f1aa2722a121c47d08ad14db95" prot="public">
          <name>ADCBufCC26X2_VDDS_REFERENCE</name>
          <initializer>= AUXADC_REF_VDDS_REL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifies whether the internal reference of the ADC is sourced from the battery voltage or a fixed internal source. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>In practice, using the internal fixed voltage reference sets the upper range of the ADC to a fixed value. That value is 4.3V with input scaling enabled and ~1.4785V with input scaling disabled. In this mode, the output is a function of the input voltage multiplied by the resolution in alternatives (not bits) divided by the upper voltage range of the ADC. Output = Input (V) * 2^12 / (ADC range (V))</para></listitem><listitem><para>Using VDDS as a reference scales the upper range of the ADC with the battery voltage. As the battery depletes and its voltage drops, so does the range of the ADC. This is helpful when measuring signals that are generated relative to the battery voltage. In this mode, the output is a function of the input voltage multiplied by the resolution in alternatives (not bits) divided by VDDS multiplied by a scaling factor derived from the input scaling. Output = Input (V) * 2^12 / (VDDS (V) * Scaling factor), where the scaling factor is ~1.4785/4.3 for input scaling disabled and 1 for input scaling enabled.</para></listitem></itemizedlist>
</para><para><simplesect kind="note"><para>The actual reference values are slightly different for each device and are higher than the values specified above. This gain is saved in the FCFG. The function ADCBuf_convertRawToMicroVolts() must be used to derive actual voltage values. Do not attempt to compare raw values between devices or derive a voltage from them yourself. The results of doing so will only be approximately correct.</para></simplesect>
<simplesect kind="warning"><para>Even though the upper voltage range of the ADC is 4.3 volts in fixed mode with input scaling enabled, the input should never exceed VDDS as per the data sheet. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="439" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="439" bodyend="442"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1a543debf4d8883cab4cb98e43a90b7dc2" prot="public" static="no">
        <type>enum <ref refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69" kindref="member">ADCBufCC26X2_Sampling_Mode</ref></type>
        <definition>typedef enum ADCBufCC26X2_Sampling_Mode  ADCBufCC26X2_Sampling_Mode</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_Sampling_Mode</name>
        <briefdescription>
<para>Specifies whether the internal reference of the ADC is sourced from the battery voltage or a fixed internal source. </para>        </briefdescription>
        <detaileddescription>
<para>The CC26X2 ADC can operate in two different ways with regards to the sampling phase of the ADC conversion process:<itemizedlist>
<listitem><para>It can spend a fixed amount of time sampling the signal after getting the start conversion trigger.</para></listitem><listitem><para>It can constantly keep sampling and immediately start the conversion process after getting the trigger.</para></listitem></itemizedlist>
</para><para>In ADCBufCC26X2_SYNCHRONOUS mode, the ADC goes into IDLE in between conversions and uses less power. The minimum sample time for full precision in ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS is dependent on the input load. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1a7e7035879f294b7e6c9f4005f0bb2a15" prot="public" static="no">
        <type>enum <ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246" kindref="member">ADCBufCC26X2_Sampling_Duration</ref></type>
        <definition>typedef enum ADCBufCC26X2_Sampling_Duration  ADCBufCC26X2_Sampling_Duration</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_Sampling_Duration</name>
        <briefdescription>
<para>Amount of time the ADC spends sampling the analogue input. </para>        </briefdescription>
        <detaileddescription>
<para>The analogue to digital conversion process consists of two phases in the CC26X2 ADC, the sampling and conversion phases. During the sampling phase, the ADC samples the analogue input signal. Larger input loads require longer sample times for the most accurate results. In ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS mode, this enum specifies the sampling times available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1ad3a0f18ea55c5fc67d11c61007aaa0c0" prot="public" static="no">
        <type>enum <ref refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3" kindref="member">ADCBufCC26X2_Reference_Source</ref></type>
        <definition>typedef enum ADCBufCC26X2_Reference_Source  ADCBufCC26X2_Reference_Source</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_Reference_Source</name>
        <briefdescription>
<para>Specifies whether the internal reference of the ADC is sourced from the battery voltage or a fixed internal source. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>In practice, using the internal fixed voltage reference sets the upper range of the ADC to a fixed value. That value is 4.3V with input scaling enabled and ~1.4785V with input scaling disabled. In this mode, the output is a function of the input voltage multiplied by the resolution in alternatives (not bits) divided by the upper voltage range of the ADC. Output = Input (V) * 2^12 / (ADC range (V))</para></listitem><listitem><para>Using VDDS as a reference scales the upper range of the ADC with the battery voltage. As the battery depletes and its voltage drops, so does the range of the ADC. This is helpful when measuring signals that are generated relative to the battery voltage. In this mode, the output is a function of the input voltage multiplied by the resolution in alternatives (not bits) divided by VDDS multiplied by a scaling factor derived from the input scaling. Output = Input (V) * 2^12 / (VDDS (V) * Scaling factor), where the scaling factor is ~1.4785/4.3 for input scaling disabled and 1 for input scaling enabled.</para></listitem></itemizedlist>
</para><para><simplesect kind="note"><para>The actual reference values are slightly different for each device and are higher than the values specified above. This gain is saved in the FCFG. The function ADCBuf_convertRawToMicroVolts() must be used to derive actual voltage values. Do not attempt to compare raw values between devices or derive a voltage from them yourself. The results of doing so will only be approximately correct.</para></simplesect>
<simplesect kind="warning"><para>Even though the upper voltage range of the ADC is 4.3 volts in fixed mode with input scaling enabled, the input should never exceed VDDS as per the data sheet. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="442" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1a210d087934d76f6e42817698d4f88311" prot="public" static="no">
        <type>struct <ref refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry" kindref="compound">ADCBufCC26X2_AdcChannelLutEntry</ref></type>
        <definition>typedef struct ADCBufCC26X2_AdcChannelLutEntry  ADCBufCC26X2_AdcChannelLutEntry</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_AdcChannelLutEntry</name>
        <briefdescription>
<para>Table entry that maps a virtual adc channel to a dio and its corresponding internal analogue signal. </para>        </briefdescription>
        <detaileddescription>
<para>Non-dio signals can be used as well. To do this, compBInput is set to the driverlib define corresponding to the desired non-dio signal and dio is set to PIN_UNASSIGNED. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="461" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1abe20f6d526124622dbc7496bd24aa559" prot="public" static="no">
        <type>struct <ref refid="struct_a_d_c_buf_c_c26_x2___params_extension" kindref="compound">ADCBufCC26X2_ParamsExtension</ref></type>
        <definition>typedef struct ADCBufCC26X2_ParamsExtension  ADCBufCC26X2_ParamsExtension</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_ParamsExtension</name>
        <briefdescription>
<para>CC26X2 specfic extension to ADCBuf_Params. </para>        </briefdescription>
        <detaileddescription>
<para>To use non-default CC26X2 specific parameters when calling <ref refid="_a_d_c_buf_8h_1a292e0e615d57d93c2f87f7e915e7027b" kindref="member">ADCBuf_open()</ref>, a pointer to an instance of this struct must be specified in <ref refid="struct_a_d_c_buf___params___1adc93f0522f0f47abc83b87cff3095d89" kindref="member">ADCBuf_Params::custom</ref>. Alternatively, these values can be set using the control function after calling <ref refid="_a_d_c_buf_8h_1a292e0e615d57d93c2f87f7e915e7027b" kindref="member">ADCBuf_open()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1ad6b9e902125ce0b2c6a128ab11fcab74" prot="public" static="no">
        <type>struct <ref refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs" kindref="compound">ADCBufCC26X2_HWAttrs</ref></type>
        <definition>typedef struct ADCBufCC26X2_HWAttrs  ADCBufCC26X2_HWAttrs</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_HWAttrs</name>
        <briefdescription>
<para>ADCBufCC26X2 Hardware Attributes. </para>        </briefdescription>
        <detaileddescription>
<para>These fields are used by driverlib APIs and therefore must be populated by driverlib macro definitions. For CC26xxWare these definitions are found in:<itemizedlist>
<listitem><para>inc/hw_memmap.h</para></listitem><listitem><para>inc/hw_ints.h</para></listitem></itemizedlist>
</para><para>A sample structure is shown below: <programlisting><codeline><highlight class="normal">const<sp/>ADCBufCC26X2_HWAttrs<sp/>ADCBufCC26X2HWAttrs[]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.intPriority<sp/>=<sp/>~0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.swiPriority<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="538" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1a3178985af1128ddf7bfbdbc3e612d566" prot="public" static="no">
        <type>struct <ref refid="struct_a_d_c_buf_c_c26_x2___object" kindref="compound">ADCBufCC26X2_Object</ref></type>
        <definition>typedef struct ADCBufCC26X2_Object  ADCBufCC26X2_Object</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_Object</name>
        <briefdescription>
<para>ADCBufCC26X2 Object. </para>        </briefdescription>
        <detaileddescription>
<para>The application must not access any member variables of this structure! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="582" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_d_c_buf_c_c26_x2_8h_1a0693d52544e383d437045d1a6de57e80" prot="public" static="no">
        <type>struct <ref refid="struct_a_d_c_buf_c_c26_x2___object" kindref="compound">ADCBufCC26X2_Object</ref> *</type>
        <definition>typedef struct ADCBufCC26X2_Object * ADCBufCC26X2_Handle</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="582" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_d_c_buf_c_c26_x2_8h_1a1fd7e145260476fcc86d59f3d45ffd7d" prot="public" static="no" mutable="no">
        <type>const <ref refid="_a_d_c_buf_8h_1af15c19b29f04db7b3755c255187c1dc4" kindref="member">ADCBuf_FxnTable</ref></type>
        <definition>const ADCBuf_FxnTable ADCBufCC26X2_fxnTable</definition>
        <argsstring></argsstring>
        <name>ADCBufCC26X2_fxnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="370" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ADCBuf driver implementation for a CC26X2 analog-to-digital converter. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><heading level="1">Driver include</heading>
</para><para>The ADCBuf header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/ADCBuf.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/adc/ADCBufCC26X2.h&gt;</highlight></codeline>
</programlisting></para><para><heading level="1">Overview</heading>
</para><para>This is a CC26X2 specific implementation of the generic TI-RTOS ADCBuf driver. The generic ADCBuf API specified in <ref refid="_a_d_c_buf_8h" kindref="compound">ti/drivers/ADCBuf.h</ref> should be called by the application, not the device specific implementation in ti/drivers/adcbuf/ADCBufCC26X2. The board file defines the device specific configuration and casting in the general API ensures the correct device specific functions are called. You should specify an <ref refid="struct_a_d_c_buf_c_c26_x2___params_extension" kindref="compound">ADCBufCC26X2_ParamsExtension</ref> in the custom field of the ADCBuf_Params that suits your application. The default settings work for many, but not all, usecases.</para><para><heading level="1">General Behavior</heading>
</para><para>A timer and the DMA are used to trigger the ADC and fill a buffer in the background (in hardware) at a specified frequency. The application may execute other tasks while the hardware handles the conversions. In contrast to the standard ti/drivers/ADC driver, this driver allows for precise sampling of waveforms.</para><para><table rows="3" cols="2"><row>
<entry thead="yes"><para>Driver </para></entry><entry thead="yes"><para>Number of samples needed in one call  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_8h" kindref="compound">ADC.h</ref> </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h" kindref="compound">ADCBuf.h</ref> </para></entry><entry thead="no"><para>&gt; 1 </para></entry></row>
</table>
This ADCBuf driver provides an API interface to using the analog-to-digital converter directly from the CM3 without going through the sensor controller. The sensor controller can still use the ADC, support for sharing the ADC resource between the sensor controller and the CM3 is built into the driver. There is a hardware semaphore that the driver must acquire before beginning any number of conversions. This same hardware semaphore also prevents the simultaneous use of this driver and the basic ADC driver.</para><para>The ADC drivers supports making between one and 1024 measurements once or continuous measuring with returned buffer sizes between one and 1024 measurements.</para><para>The application should call <ref refid="_a_d_c_buf_8h_1a88a0ab421304465b22417a7adef6c0c2" kindref="member">ADCBuf_init()</ref> once by the application to set the isOpened flag to false, indicating that the driver is ready to use.</para><para>The ADC driver is opened by calling <ref refid="_a_d_c_buf_8h_1a292e0e615d57d93c2f87f7e915e7027b" kindref="member">ADCBuf_open()</ref> which will set up interrupts and configure the internal components of the driver. However, the ADC hardware or analog pins are not yet configured, since the sensor controller or basic ADC driver might be using the ADC.</para><para>In order to perform an ADC conversion, the application should call <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref>. This call will request the ADC resource, configure the ADC, set up the DMA and GPTimer, and perform the requested ADC conversions on the selected DIO or internal signal. The DIO or internal signal is defined by the ADCBuf_Conversion structure in the application code and adcBufCC26x2Objects in the board file.</para><para><simplesect kind="warning"><para>If the ADCBUF driver is setup in ADCBuf_RECURRENCE_MODE_CONTINUOUS mode, the user must assure that the provided callback function is completed before the next conversion completes. If the next conversion completes before the callback function finishes, the DMA will clobber the previous buffer with new data.</para></simplesect>
If the sensor controller is using the ADC when the driver requests it at the start of the <ref refid="_a_d_c_8h_1afcac5582b8be42a7740091d150aef05c" kindref="member">ADC_convert()</ref> call, the conversion will fail and return false. The ADC resource may be pre-acquired by calling the control function ADCBufCC26X2_CMD_ACQUIRE_ADC_SEMAPHORE. It will be released again automatically after the next conversion completes.</para><para>In both ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS mode and ADCBufCC26X2_SAMPING_MODE_ASYNCHRONOUS mode, enough sampling time must be provided between conversions that each measurement may be completed before the next trigger arrives.</para><para><simplesect kind="note"><para>The ADCBuf driver requires GPTimer0A to function correctly. It will be unavailable for other uses.</para></simplesect>
<heading level="1">Supported ADC pins</heading>
</para><para>Below is a table of the supported ADC IO pins for each package size, for both CC26x2 and CC13x2. It maps a DIO to its corresponding driverlib define for the CompBInput that it is hardwired to. This table can be used to create virtual channel entries in the ADCBufCC26X2_adcChannelLut table in the board file.</para><para><table rows="25" cols="3"><row>
<entry thead="yes"><para>DIO </para></entry><entry thead="yes"><para>CC26x2 7x7 AUXIO CompBInput </para></entry><entry thead="yes"><para>CC13x2 7x7 AUXIO CompBInput  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>3 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>4 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>5 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>6 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>7 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>8 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>9 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>10 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>11 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>12 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>13 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>14 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>15-22 </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>23 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO7 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO7 </para></entry></row>
<row>
<entry thead="no"><para>24 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO6 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO6 </para></entry></row>
<row>
<entry thead="no"><para>25 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO5 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO5 </para></entry></row>
<row>
<entry thead="no"><para>26 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO4 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO4 </para></entry></row>
<row>
<entry thead="no"><para>27 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO3 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO3 </para></entry></row>
<row>
<entry thead="no"><para>28 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO2 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO2 </para></entry></row>
<row>
<entry thead="no"><para>29 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO1 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO1 </para></entry></row>
<row>
<entry thead="no"><para>30 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO0 </para></entry><entry thead="no"><para>ADC_COMPB_IN_AUXIO0 </para></entry></row>
</table>
<heading level="1">Supported Internal Signals</heading>
</para><para>Below is a table of internal signals that can be measured using the ADC. Since we are not connecting to a DIO, there is no DIO to internal signal mapping. The DIO field in the channel lookup table should be marked PIN_UNASSIGNED. This table can be used to create virtual channel entries in the ADCBufCC26X2_adcChannelLut table in the board file.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para>DIO </para></entry><entry thead="yes"><para>Internal Signal CompBInput  </para></entry></row>
<row>
<entry thead="no"><para>PIN_UNASSIGNED </para></entry><entry thead="no"><para>ADC_COMPB_IN_DCOUPL </para></entry></row>
<row>
<entry thead="no"><para>PIN_UNASSIGNED </para></entry><entry thead="no"><para>ADC_COMPB_IN_VSS </para></entry></row>
<row>
<entry thead="no"><para>PIN_UNASSIGNED </para></entry><entry thead="no"><para>ADC_COMPB_IN_VDDS </para></entry></row>
</table>
<heading level="1">Error handling</heading>
</para><para>The following errors may occur when opening the ADC without assertions enabled:<itemizedlist>
<listitem><para>The ADC handle is already open.</para></listitem></itemizedlist>
</para><para>The following errors may occur when requesting an ADC conversion:<itemizedlist>
<listitem><para>The ADC is currently already doing a conversion.</para></listitem><listitem><para>The ADC was not available (used by sensor controller or basic ADC).</para></listitem></itemizedlist>
</para><para><heading level="1">Power Management</heading>
</para><para>The TI-RTOS power management framework will try to put the device into the most power efficient mode whenever possible. Please see the technical reference manual for further details on each power mode.</para><para>While converting, the ADCBufCC26X2 driver sets a power constraint to keep the device out of standby. When the conversion has finished, the power constraint is released. The driver also sets a dependency on the DMA to enable background transfers from the ADC FIFO to memory. The following statements are valid:<itemizedlist>
<listitem><para>After <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref>: the device cannot enter standby.</para></listitem><listitem><para>After <ref refid="_a_d_c_buf_8h_1a5201c27bddf11b9f9ae902807bded40d" kindref="member">ADCBuf_convertCancel()</ref>: the device can enter standby again.</para></listitem><listitem><para>After a conversion finishes: the device can enter standby again.</para></listitem></itemizedlist>
</para><para><heading level="1">Supported Functions</heading>
</para><para><table rows="11" cols="2"><row>
<entry thead="yes"><para>API function </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a88a0ab421304465b22417a7adef6c0c2" kindref="member">ADCBuf_init()</ref> </para></entry><entry thead="no"><para>Initialize ADC driver </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a292e0e615d57d93c2f87f7e915e7027b" kindref="member">ADCBuf_open()</ref> </para></entry><entry thead="no"><para>Open the ADC driver and configure driver </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> </para></entry><entry thead="no"><para>Perform ADC conversion </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a5201c27bddf11b9f9ae902807bded40d" kindref="member">ADCBuf_convertCancel()</ref> </para></entry><entry thead="no"><para>Cancel ongoing ADC conversion </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a04ab5fae5da8f9ff77ab3ae4974d8f7d" kindref="member">ADCBuf_close()</ref> </para></entry><entry thead="no"><para>Close ADC driver </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1ae6ddd34c34fd06cdede98fb01033cc47" kindref="member">ADCBuf_Params_init()</ref> </para></entry><entry thead="no"><para>Initialise ADCBuf_Params structure to default values </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a2ff6d7db155bcd1367ef82a9f5cef19c" kindref="member">ADCBuf_getResolution()</ref> </para></entry><entry thead="no"><para>Get the resolution of the ADC of the current device </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a636816201fdb596b748a0ce4d4bf6739" kindref="member">ADCBuf_adjustRawValues()</ref> </para></entry><entry thead="no"><para>Adjust the values in a returned buffer for manufacturing tolerances </para></entry></row>
<row>
<entry thead="no"><para>ADCBuf_convertAdjustedToMicroVolts </para></entry><entry thead="no"><para>Convert a buffer of adjusted values to microvolts </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_a_d_c_buf_8h_1a87678933c235c0bfc1a26472ef873014" kindref="member">ADCBuf_control()</ref> </para></entry><entry thead="no"><para>Execute device specific functions </para></entry></row>
</table>
</para><para><heading level="1">Not Supported Functionality</heading>
</para><para><itemizedlist>
<listitem><para>Performing conversions on multiple channels simultaneously is not supported. In other words, the parameter channelCount must always be set to 1 when calling <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref>. The ADC on CC26XX devices does not support time-division multiplexing of channels or pins in hardware.</para></listitem></itemizedlist>
</para><para><heading level="1">Use Cases</heading>
</para><para><heading level="2">Basic one-shot conversion</heading>
</para><para>Perform one conversion on Board_ADCCHANNEL_A1 in <ref refid="_a_d_c_buf_8h_1aa9e88854960e236788f9775ff630a433a5c6236b2f629b196d7874175be679399" kindref="member">ADCBuf_RETURN_MODE_BLOCKING</ref>. <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/ADCBuf.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>ADCBUFFERSIZE<sp/><sp/><sp/>100</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ADCBuf_Handle<sp/>adcBufHandle;</highlight></codeline>
<codeline><highlight class="normal">ADCBuf_Params<sp/>adcBufParams;</highlight></codeline>
<codeline><highlight class="normal">ADCBuf_Conversion<sp/>blockingConversion;</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>sampleBufferOne[ADCBUFFERSIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ADCBuf_Params_init(&amp;adcBufParams);</highlight></codeline>
<codeline><highlight class="normal">adcBufHandle<sp/>=<sp/>ADCBuf_open(Board_ADCBuf0,<sp/>&amp;adcBufParams);</highlight></codeline>
<codeline><highlight class="normal"><sp/>if<sp/>(adcBufHandle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">blockingConversion.arg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.adcChannel<sp/>=<sp/>Board_ADCCHANNEL_A1;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.sampleBuffer<sp/>=<sp/>sampleBufferOne;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.sampleBufferTwo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.samplesRequestedCount<sp/>=<sp/>ADCBUFFERSIZE;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(ADCBuf_convert(adcBufHandle,<sp/>&amp;blockingConversion,<sp/>1)<sp/>!=<sp/>ADCBuf_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="2">Using <ref refid="struct_a_d_c_buf_c_c26_x2___params_extension" kindref="compound">ADCBufCC26X2_ParamsExtension</ref></heading>
</para><para>This specific configuration performs one conversion on Board_ADCCHANNEL_A1 in <ref refid="_a_d_c_buf_8h_1aa9e88854960e236788f9775ff630a433a5c6236b2f629b196d7874175be679399" kindref="member">ADCBuf_RETURN_MODE_BLOCKING</ref>. The custom parameters used here are identical to the defaults parameters. Users can of course define their own parameters. <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/ADCBuf.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>ADCBUFFERSIZE<sp/><sp/><sp/>100</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ADCBuf_Handle<sp/>adcBufHandle;</highlight></codeline>
<codeline><highlight class="normal">ADCBuf_Params<sp/>adcBufParams;</highlight></codeline>
<codeline><highlight class="normal">ADCBuf_Conversion<sp/>blockingConversion;</highlight></codeline>
<codeline><highlight class="normal">uint16_t<sp/>sampleBufferOne[ADCBUFFERSIZE];</highlight></codeline>
<codeline><highlight class="normal">ADCBufCC26X2_ParamsExtension<sp/>customParams;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ADCBuf_Params_init(&amp;adcBufParams);</highlight></codeline>
<codeline><highlight class="normal">customParams.samplingDuration<sp/><sp/><sp/><sp/>=<sp/>ADCBufCC26X2_SAMPLING_DURATION_2P7_US;</highlight></codeline>
<codeline><highlight class="normal">customParams.refSource<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADCBufCC26X2_FIXED_REFERENCE;</highlight></codeline>
<codeline><highlight class="normal">customParams.samplingMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS;</highlight></codeline>
<codeline><highlight class="normal">customParams.inputScalingEnabled<sp/>=<sp/>true;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">adcBufParams.custom<sp/>=<sp/>&amp;customParams;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">adcBufHandle<sp/>=<sp/>ADCBuf_open(Board_ADCBuf0,<sp/>&amp;adcBufParams);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(adcBufHandle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">blockingConversion.arg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.adcChannel<sp/>=<sp/>Board_ADCCHANNEL_A1;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.sampleBuffer<sp/>=<sp/>sampleBufferOne;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.sampleBufferTwo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">blockingConversion.samplesRequestedCount<sp/>=<sp/>ADCBUFFERSIZE;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(ADCBuf_convert(adcBufHandle,<sp/>&amp;blockingConversion,<sp/>1)<sp/>!=<sp/>ADCBuf_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="1">Instrumentation</heading>
</para><para>The ADC driver interface produces log statements if instrumentation is enabled.</para><para><table rows="3" cols="2"><row>
<entry thead="yes"><para>Diagnostics Mask </para></entry><entry thead="yes"><para>Log details  </para></entry></row>
<row>
<entry thead="no"><para>Diags_USER1 </para></entry><entry thead="no"><para>basic ADCBuf operations performed </para></entry></row>
<row>
<entry thead="no"><para>Diags_USER2 </para></entry><entry thead="no"><para>detailed ADCBuf operations performed </para></entry></row>
</table>
<hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_adc_adcbufcc26xx__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_adc_adcbufcc26xx__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_a_d_c_buf_8h" kindref="compound">ti/drivers/ADCBuf.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_p_i_n_8h" kindref="compound">ti/drivers/PIN.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_p_i_n_c_c26_x_x_8h" kindref="compound">ti/drivers/pin/PINCC26XX.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_u_d_m_a_c_c26_x_x_8h" kindref="compound">ti/drivers/dma/UDMACC26XX.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_g_p_timer_c_c26_x_x_8h" kindref="compound">ti/drivers/timer/GPTimerCC26XX.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_power_8h" kindref="compound">ti/drivers/Power.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_power_c_c26_x2_8h" kindref="compound">ti/drivers/power/PowerCC26X2.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/devices/DeviceFamily.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(driverlib/aux_adc.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/HwiP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/ClockP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/SemaphoreP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/SwiP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="comment">/*<sp/>Add<sp/>ADCBufCC26X2_CMD_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group___a_d_c_buf___c_m_d_1gad718c3bba0f5e4319c9b09e7bf5dc3ba" refkind="member"><highlight class="preprocessor">#define<sp/>ADCBufCC26X2_CMD_ACQUIRE_ADC_SEMAPHORE<sp/>ADCBuf_CMD_RESERVED<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group___a_d_c_buf___c_m_d_1ga297e57ceef7d21efad09a4c9f8cc5e9a" refkind="member"><highlight class="preprocessor">#define<sp/>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE<sp/>ADCBuf_CMD_RESERVED<sp/>+<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="group___a_d_c_buf___c_m_d_1gadd5ecbab7264c2cd7b29d9d8e5736387" refkind="member"><highlight class="preprocessor">#define<sp/>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE<sp/>ADCBuf_CMD_RESERVED<sp/>+<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group___a_d_c_buf___c_m_d_1ga760d6e0d9c8d79bd7fadbd1e72204ce8" refkind="member"><highlight class="preprocessor">#define<sp/>ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE<sp/>ADCBuf_CMD_RESERVED<sp/>+<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="_a_d_c_buf_c_c26_x2_8h_1a85bd850ff22f7dd780deeddc49ad4896" refkind="member"><highlight class="preprocessor">#define<sp/>ADCBufCC26X2_RESOLUTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="_a_d_c_buf_c_c26_x2_8h_1a403ad240860839ba81d9334ca9319516" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADCBufCC26X2_BYTES_PER_SAMPLE<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>Constants</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ADCBuf<sp/>function<sp/>table<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_d_c_buf___fxn_table__" kindref="compound">ADCBuf_FxnTable</ref><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a1fd7e145260476fcc86d59f3d45ffd7d" kindref="member">ADCBufCC26X2_fxnTable</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>Enumerations</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69" kindref="member">ADCBufCC26X2_Sampling_Mode</ref><sp/>{</highlight></codeline>
<codeline lineno="390" refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69ac9b4b759255867b6f0ebe762ebfe830e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69ac9b4b759255867b6f0ebe762ebfe830e" kindref="member">ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS</ref>,</highlight></codeline>
<codeline lineno="391" refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69af0ec7f9f4bc4bd7481b385536144ad97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69af0ec7f9f4bc4bd7481b385536144ad97" kindref="member">ADCBufCC26X2_SAMPING_MODE_ASYNCHRONOUS</ref></highlight></codeline>
<codeline lineno="392"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a8350116bf32245b3128dc5018e53ed69" kindref="member">ADCBufCC26X2_Sampling_Mode</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246" kindref="member">ADCBufCC26X2_Sampling_Duration</ref><sp/>{</highlight></codeline>
<codeline lineno="403" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a91e405f674127ff3e12c216f1c7649f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a91e405f674127ff3e12c216f1c7649f6" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_2P7_US</ref><sp/><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_2P7_US,</highlight></codeline>
<codeline lineno="404" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246ac56fec68c59ad8cea8c224aaed9d2b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246ac56fec68c59ad8cea8c224aaed9d2b65" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_5P3_US</ref><sp/><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_5P3_US,</highlight></codeline>
<codeline lineno="405" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246adea25b2e39702800bc558405572ed5a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246adea25b2e39702800bc558405572ed5a3" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_10P6_US</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_10P6_US,</highlight></codeline>
<codeline lineno="406" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246ac2c293912608c1944a3508599973c5c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246ac2c293912608c1944a3508599973c5c2" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_21P3_US</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_21P3_US,</highlight></codeline>
<codeline lineno="407" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246add4b91f1736496c609198cf43b4bd0b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246add4b91f1736496c609198cf43b4bd0b5" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_42P6_US</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_42P6_US,</highlight></codeline>
<codeline lineno="408" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a3728f65eb3cb5c35e4bfb96ce43716c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a3728f65eb3cb5c35e4bfb96ce43716c2" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_85P3_US</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_85P3_US,</highlight></codeline>
<codeline lineno="409" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a9edd384603324a422cfcdf58fe364fe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a9edd384603324a422cfcdf58fe364fe0" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_170_US</ref><sp/><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_170_US,</highlight></codeline>
<codeline lineno="410" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246aa95cadf2f1f90afd154397f0b0888bb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246aa95cadf2f1f90afd154397f0b0888bb2" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_341_US</ref><sp/><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_341_US,</highlight></codeline>
<codeline lineno="411" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a4959e22c7fdefe3ab297185673d3f7b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a4959e22c7fdefe3ab297185673d3f7b2" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_682_US</ref><sp/><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_682_US,</highlight></codeline>
<codeline lineno="412" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246aa597af33dd27ab3f398c4d600b61b54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246aa597af33dd27ab3f398c4d600b61b54e" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_1P37_MS</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_1P37_MS,</highlight></codeline>
<codeline lineno="413" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a918f6e52bf0d77ff10e01448b2b52dc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a918f6e52bf0d77ff10e01448b2b52dc5" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_2P73_MS</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_2P73_MS,</highlight></codeline>
<codeline lineno="414" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a22a23e9a9c76d01a42fbc0f81bef029d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a22a23e9a9c76d01a42fbc0f81bef029d" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_5P46_MS</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_5P46_MS,</highlight></codeline>
<codeline lineno="415" refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a244f0103dc68974ffd332ed9cee75be8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246a244f0103dc68974ffd332ed9cee75be8" kindref="member">ADCBufCC26X2_SAMPLING_DURATION_10P9_MS</ref><sp/><sp/><sp/>=<sp/>AUXADC_SAMPLE_TIME_10P9_MS</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a017a4e439a51475975a86d669de3d246" kindref="member">ADCBufCC26X2_Sampling_Duration</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3" kindref="member">ADCBufCC26X2_Reference_Source</ref><sp/>{</highlight></codeline>
<codeline lineno="440" refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3a61614365f7815f3522749e80932b6c95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3a61614365f7815f3522749e80932b6c95" kindref="member">ADCBufCC26X2_FIXED_REFERENCE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AUXADC_REF_FIXED,</highlight></codeline>
<codeline lineno="441" refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3a03b5c4f1aa2722a121c47d08ad14db95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3a03b5c4f1aa2722a121c47d08ad14db95" kindref="member">ADCBufCC26X2_VDDS_REFERENCE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AUXADC_REF_VDDS_REL</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a323aa032b8eac0638162f08b4ba49db3" kindref="member">ADCBufCC26X2_Reference_Source</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>Structs</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry" kindref="compound">ADCBufCC26X2_AdcChannelLutEntry</ref>{</highlight></codeline>
<codeline lineno="459" refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry_1ac4b8005dfe55c712a92b7bfd1370b675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry_1ac4b8005dfe55c712a92b7bfd1370b675" kindref="member">dio</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460" refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry_1a9c364643ec0f2d785b9214cb5d6c4909" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry_1a9c364643ec0f2d785b9214cb5d6c4909" kindref="member">compBInput</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a210d087934d76f6e42817698d4f88311" kindref="member">ADCBufCC26X2_AdcChannelLutEntry</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="struct_a_d_c_buf_c_c26_x2___params_extension" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_d_c_buf_c_c26_x2___params_extension" kindref="compound">ADCBufCC26X2_ParamsExtension</ref>{</highlight></codeline>
<codeline lineno="472" refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a99dff88970f0f740f3a8e3954b5ec9db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ADCBufCC26X2_Sampling_Duration<sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a99dff88970f0f740f3a8e3954b5ec9db" kindref="member">samplingDuration</ref>;</highlight></codeline>
<codeline lineno="474" refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a89e72a1be7acd6e49d15cc1bdfa9118c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ADCBufCC26X2_Sampling_Mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a89e72a1be7acd6e49d15cc1bdfa9118c" kindref="member">samplingMode</ref>;</highlight></codeline>
<codeline lineno="476" refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a2cb19f2b44f9ec65ea0f9bdb4696a962" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ADCBufCC26X2_Reference_Source<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a2cb19f2b44f9ec65ea0f9bdb4696a962" kindref="member">refSource</ref>;</highlight></codeline>
<codeline lineno="492" refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a3328f3f34f211c5a2bdc81048ac602e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___params_extension_1a3328f3f34f211c5a2bdc81048ac602e8" kindref="member">inputScalingEnabled</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1abe20f6d526124622dbc7496bd24aa559" kindref="member">ADCBufCC26X2_ParamsExtension</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs" kindref="compound">ADCBufCC26X2_HWAttrs</ref>{</highlight></codeline>
<codeline lineno="519" refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1a84d68446ab54c3da17a7e16fbfd2c5be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1a84d68446ab54c3da17a7e16fbfd2c5be" kindref="member">swiPriority</ref>;</highlight></codeline>
<codeline lineno="533" refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1a71c82bba7c50caf1c5fea571ab8ab384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1a71c82bba7c50caf1c5fea571ab8ab384" kindref="member">intPriority</ref>;</highlight></codeline>
<codeline lineno="535" refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1a4b24548fe90f51468e4ac21e2bbb7739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry" kindref="compound">ADCBufCC26X2_AdcChannelLutEntry</ref><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1a4b24548fe90f51468e4ac21e2bbb7739" kindref="member">adcChannelLut</ref>;</highlight></codeline>
<codeline lineno="537" refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1afc92a2facf144438fc988185c0f3ea46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___h_w_attrs_1afc92a2facf144438fc988185c0f3ea46" kindref="member">gpTimerUnit</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1ad6b9e902125ce0b2c6a128ab11fcab74" kindref="member">ADCBufCC26X2_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="struct_a_d_c_buf_c_c26_x2___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_d_c_buf_c_c26_x2___object" kindref="compound">ADCBufCC26X2_Object</ref>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ADC<sp/>control<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="struct_a_d_c_buf_c_c26_x2___object_1ab0025fa5de0affaf88be29bafc47969c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1ab0025fa5de0affaf88be29bafc47969c" kindref="member">isOpen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550" refid="struct_a_d_c_buf_c_c26_x2___object_1a577757b64402aaefb355f862b82ec45c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a577757b64402aaefb355f862b82ec45c" kindref="member">conversionInProgress</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551" refid="struct_a_d_c_buf_c_c26_x2___object_1a6054814a2a3e3d874980a499b4ce6fa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a6054814a2a3e3d874980a499b4ce6fa6" kindref="member">inputScalingEnabled</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552" refid="struct_a_d_c_buf_c_c26_x2___object_1a46471d17570d38a574d487d5d2cdbef5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a46471d17570d38a574d487d5d2cdbef5" kindref="member">keepADCSemaphore</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553" refid="struct_a_d_c_buf_c_c26_x2___object_1a6dcc0aa67ced4f38e74b08f572a179b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a6dcc0aa67ced4f38e74b08f572a179b3" kindref="member">adcSemaphoreInPossession</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554" refid="struct_a_d_c_buf_c_c26_x2___object_1a1eab22e7b037c1747451ab2f781eee12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a1eab22e7b037c1747451ab2f781eee12" kindref="member">currentChannel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555" refid="struct_a_d_c_buf_c_c26_x2___object_1ab25ac9dcb5df71a7d3aed2e1c7ddba3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ADCBufCC26X2_Reference_Source<sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1ab25ac9dcb5df71a7d3aed2e1c7ddba3b" kindref="member">refSource</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556" refid="struct_a_d_c_buf_c_c26_x2___object_1ab3e94ff710ae121d8232b148207ba5df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ADCBufCC26X2_Sampling_Mode<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1ab3e94ff710ae121d8232b148207ba5df" kindref="member">samplingMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557" refid="struct_a_d_c_buf_c_c26_x2___object_1aefd799b29bcced4bd28834460147e778" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ADCBufCC26X2_Sampling_Duration<sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1aefd799b29bcced4bd28834460147e778" kindref="member">samplingDuration</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="558" refid="struct_a_d_c_buf_c_c26_x2___object_1a76a2cf12d79f1c002fe3ec80df43ba4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_8h_1a477c377c65f8de04aa67ff7eefa0a4cf" kindref="member">ADCBuf_Callback</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a76a2cf12d79f1c002fe3ec80df43ba4c" kindref="member">callbackFxn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559" refid="struct_a_d_c_buf_c_c26_x2___object_1afd7bbb3490032e43b75eb9a1c265619b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_8h_1a0df315657027d8c4dc1582ee6438522b" kindref="member">ADCBuf_Recurrence_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1afd7bbb3490032e43b75eb9a1c265619b" kindref="member">recurrenceMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560" refid="struct_a_d_c_buf_c_c26_x2___object_1ad3f6938b01e8dae714fd8f31ce451df7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_d_c_buf_8h_1a3cc88be061075c8c609959d56adb30a4" kindref="member">ADCBuf_Return_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1ad3f6938b01e8dae714fd8f31ce451df7" kindref="member">returnMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561" refid="struct_a_d_c_buf_c_c26_x2___object_1acc76d50ef598bd2cd2bdc35f9d6bfb01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_d_c_buf_c_c26_x2___object_1acc76d50ef598bd2cd2bdc35f9d6bfb01" kindref="member">activeSampleBuffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ADC<sp/>SYS/BIOS<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="struct_a_d_c_buf_c_c26_x2___object_1a8a29fed154f97f2bfde082d1c1b55c0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HwiP_Struct<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a8a29fed154f97f2bfde082d1c1b55c0e" kindref="member">hwi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565" refid="struct_a_d_c_buf_c_c26_x2___object_1a73efaf103a59e0eb0517685f448bf97b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SwiP_Struct<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a73efaf103a59e0eb0517685f448bf97b" kindref="member">swi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566" refid="struct_a_d_c_buf_c_c26_x2___object_1a6fa666bd1534470f740d72efe9b83851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SemaphoreP_Struct<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a6fa666bd1534470f740d72efe9b83851" kindref="member">conversionComplete</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568" refid="struct_a_d_c_buf_c_c26_x2___object_1a53d35750ae50fc4419d70c95c1ea485e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf___conversion__" kindref="compound">ADCBuf_Conversion</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_d_c_buf_c_c26_x2___object_1a53d35750ae50fc4419d70c95c1ea485e" kindref="member">currentConversion</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PIN<sp/>driver<sp/>state<sp/>object<sp/>and<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="struct_a_d_c_buf_c_c26_x2___object_1ac1aeccdf919be469a3cf1669462589eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_i_n___state__s" kindref="compound">PIN_State</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1ac1aeccdf919be469a3cf1669462589eb" kindref="member">pinState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572" refid="struct_a_d_c_buf_c_c26_x2___object_1a2257db99dafa51a69f66fe02a2c9728e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_i_n___state__s" kindref="compound">PIN_Handle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a2257db99dafa51a69f66fe02a2c9728e" kindref="member">pinHandle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UDMA<sp/>driver<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="struct_a_d_c_buf_c_c26_x2___object_1a7658b10626a720cdf9aeaeab23c869e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___config" kindref="compound">UDMACC26XX_Handle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a7658b10626a720cdf9aeaeab23c869e8" kindref="member">udmaHandle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GPTimer<sp/>driver<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="struct_a_d_c_buf_c_c26_x2___object_1a1031e2cc45af30d1db1ab07438f5a72f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_g_p_timer_c_c26_x_x___config" kindref="compound">GPTimerCC26XX_Handle</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a1031e2cc45af30d1db1ab07438f5a72f" kindref="member">timerHandle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580" refid="struct_a_d_c_buf_c_c26_x2___object_1adde8557507aee84d313d4d2d7e51a495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1adde8557507aee84d313d4d2d7e51a495" kindref="member">semaphoreTimeout</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="581" refid="struct_a_d_c_buf_c_c26_x2___object_1a4ae6cde0eda8b9cdd777f3454fe3516a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_d_c_buf_c_c26_x2___object_1a4ae6cde0eda8b9cdd777f3454fe3516a" kindref="member">samplingFrequency</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal">}<sp/><ref refid="_a_d_c_buf_c_c26_x2_8h_1a3178985af1128ddf7bfbdbc3e612d566" kindref="member">ADCBufCC26X2_Object</ref>,<sp/>*<ref refid="_a_d_c_buf_c_c26_x2_8h_1a0693d52544e383d437045d1a6de57e80" kindref="member">ADCBufCC26X2_Handle</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>Functions</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>=============================================================================</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_adc_ADCBufCC26XX__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_cc13xx_cc26xx_3_60_01_00/source/ti/drivers/adcbuf/ADCBufCC26X2.h"/>
  </compounddef>
</doxygen>
