/******************************************************************************
*  Filename:       rf_patch_mce_bt5.h
*  Revised:        $Date: 2017-08-24 11:43:33 +0200 (Thu, 24 Aug 2017) $
*  Revision:       $Revision: 17889 $
*
*  Description: RF core patch for Bluetooth 5 support in CC13x2 and CC26x2
*
*  Copyright (c) 2015-2017, Texas Instruments Incorporated
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions are met:
*
*  1) Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2) Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3) Neither the name of the ORGANIZATION nor the names of its contributors may
*     be used to endorse or promote products derived from this software without
*     specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
*  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
*  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
*  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
*  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
*  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
*  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
*  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*
******************************************************************************/
#ifndef _RF_PATCH_MCE_BT5_H
#define _RF_PATCH_MCE_BT5_H

#include <stdint.h>
#include "../inc/hw_types.h"

#ifndef MCE_PATCH_TYPE
#define MCE_PATCH_TYPE static const uint32_t
#endif

#ifndef PATCH_FUN_SPEC
#define PATCH_FUN_SPEC static inline
#endif

#ifndef RFC_MCERAM_BASE
#define RFC_MCERAM_BASE 0x21008000
#endif

#ifndef MCE_PATCH_MODE
#define MCE_PATCH_MODE 0
#endif

MCE_PATCH_TYPE patchBt5Mce[509] = { 
   0x2dee609e,
   0x2dc22dce,
   0x2fef0f54,
   0x5f970fef,
   0x5000179d,
   0x048005a0,
   0x40007f40,
   0x0f080128,
   0x04000800,
   0x404003ff,
   0x00002e20,
   0x00130003,
   0x00210010,
   0x00320022,
   0x00430031,
   0x00500040,
   0x00620053,
   0x00710061,
   0x005f0072,
   0x005d0060,
   0x005b005e,
   0x0059005c,
   0x0055005a,
   0x00570056,
   0x00cc0058,
   0x003c00c3,
   0x00000033,
   0x00020001,
   0x04000003,
   0x00180800,
   0x00030008,
   0x000a001a,
   0x0011002c,
   0x0003003e,
   0x00180008,
   0x0011001a,
   0x000a002c,
   0x4000003e,
   0x0000000c,
   0x00091488,
   0x000105f9,
   0x008b8000,
   0x0f500080,
   0x0a1d0000,
   0x00000590,
   0x04000005,
   0x00c17b20,
   0x000f0000,
   0x017f7f27,
   0x000c8000,
   0x14980000,
   0x05f90009,
   0x80000000,
   0x0080008b,
   0x00000f70,
   0x0590121d,
   0x00050000,
   0x7b200400,
   0x000000c1,
   0x7f26000f,
   0x4000017f,
   0x000ca00c,
   0x00030387,
   0x050140cd,
   0x01ee8000,
   0x06700080,
   0x091e0000,
   0x00560500,
   0x0000000c,
   0x00505014,
   0x001f0000,
   0x00007f7f,
   0x7f7f8804,
   0x00002c7f,
   0x00000000,
   0x009f0000,
   0x2e204040,
   0xfd900c03,
   0x0000783c,
   0x720e720d,
   0x7210720f,
   0xa4e5a35d,
   0xb0d067d5,
   0xa0d07100,
   0x721bb110,
   0x10208162,
   0x06303962,
   0x16300020,
   0x14011101,
   0x60c16c01,
   0x60f160ca,
   0x60c1613b,
   0x61d860cc,
   0x60c1624b,
   0x60f160d2,
   0x12206163,
   0x121060c2,
   0x73127311,
   0x81b17313,
   0x91b00010,
   0x60a5b070,
   0x60d3c4b1,
   0x78bcc791,
   0xc302c1fb,
   0x60d7c540,
   0x78acc621,
   0xc302c5fb,
   0x1820c460,
   0x6e236f13,
   0x16121611,
   0x94eb68d8,
   0x81709c8c,
   0x44c11e00,
   0x92b0c030,
   0x92d0c1f0,
   0xc9c0c632,
   0x40ee1820,
   0x6e231203,
   0x68eb1612,
   0x99908300,
   0xb00560c1,
   0xc1007291,
   0xb12891f0,
   0xb113b120,
   0xb0e8b111,
   0xb1287100,
   0xb230a0e8,
   0x8c80b910,
   0xb1119930,
   0x84b484a2,
   0xb0d1c0f3,
   0xb0127100,
   0xb111b002,
   0x7291a0d1,
   0xb630722c,
   0xb003b013,
   0x7100b0e0,
   0x8170b120,
   0x819092c0,
   0x71009640,
   0x92c3b120,
   0x71009642,
   0x9644b120,
   0xb1207100,
   0xa630a0e0,
   0xb0d3b633,
   0xb1137100,
   0xc030a0d3,
   0xc0209910,
   0xb0d19930,
   0xb1117100,
   0x7291a0d1,
   0xa002a003,
   0x73057263,
   0x73917306,
   0xa2307291,
   0x9010c7c0,
   0x658c60c1,
   0x65c365bc,
   0xa9107100,
   0xb9107393,
   0x316f8b4f,
   0x720f3d8f,
   0x00007313,
   0xb0740000,
   0xb35db231,
   0xa4e5970f,
   0xb064a044,
   0xc2b167cd,
   0x22f367e2,
   0x71004556,
   0xc0a3971f,
   0x91179933,
   0x7100a235,
   0xc243b078,
   0x453b67d1,
   0x67f4c030,
   0x658c60c1,
   0x65bd7860,
   0x6967c5f0,
   0xb0d565c3,
   0xc031b115,
   0x80907100,
   0x45cd2250,
   0xa910b074,
   0xb9107393,
   0x7313720f,
   0xa0d5b231,
   0x8b40b35d,
   0x97003920,
   0xa044a4e5,
   0x67cdb064,
   0xc261b234,
   0x22f367e2,
   0x71004586,
   0xc2a3b078,
   0xc04067d1,
   0x60c167f4,
   0x95a084b0,
   0x89809970,
   0x84a0100e,
   0x99709590,
   0x140e8980,
   0x180ec080,
   0x180ec080,
   0x39818351,
   0x06613921,
   0x11001631,
   0x6c001410,
   0x311e311e,
   0x398e318e,
   0x8240972e,
   0x45af2230,
   0x7100b0d5,
   0xa0d5b115,
   0xc10061a7,
   0x781091e0,
   0x13e79910,
   0xb4e5789a,
   0x9010c540,
   0xb004b002,
   0x7000b006,
   0x90507850,
   0x78709030,
   0x90409060,
   0xb2357000,
   0xb011b06c,
   0xb4e5b089,
   0xa0d0a0d1,
   0xb0fdb13d,
   0x9a317000,
   0x8a548a43,
   0x3d633133,
   0x3d643134,
   0x96a49693,
   0x616ab053,
   0x73127311,
   0x7291721f,
   0x92c08170,
   0x96408190,
   0x67f4c050,
   0xc31dc15c,
   0xc008c07e,
   0x7100b0e8,
   0xa0e8b128,
   0xb910b230,
   0x99308c80,
   0xb0d1b111,
   0xa0d17100,
   0xb0e1b634,
   0xb012b002,
   0xb013b003,
   0x7100b121,
   0xa634a0e1,
   0xb113b630,
   0xb120b0d3,
   0x84a4b0e0,
   0x104fc0f0,
   0x3914663c,
   0x84b46a03,
   0x104fc0f0,
   0x3914663c,
   0x8c946a09,
   0x104fc040,
   0x3914663c,
   0x8c946a0f,
   0x46212204,
   0x663c81df,
   0x22108210,
   0x6216421c,
   0xc00fc030,
   0x6a1d663c,
   0xc35d622e,
   0x81dfc01e,
   0x8210663c,
   0x42292210,
   0xc0306221,
   0x663cc00f,
   0x622e6a2a,
   0xc030a0e1,
   0xc0409910,
   0xb1119930,
   0x7100b0d1,
   0x7291a0d1,
   0xa002a003,
   0x60c17223,
   0x313f061f,
   0x14cf148f,
   0x10286ff2,
   0x06323948,
   0x6f2314d2,
   0xb1207100,
   0x964392ce,
   0xc0607000,
   0x899067f4,
   0x72659300,
   0x9660db00,
   0xc100b31d,
   0xc0c091e0,
   0x7b909320,
   0xc1009750,
   0xc7d2c3b1,
   0x6e236f13,
   0x16121611,
   0x67a56a5c,
   0x82406778,
   0x466d2230,
   0x7100b0d5,
   0xa0d5b115,
   0xc0706263,
   0xb23567f4,
   0x80017840,
   0x90010001,
   0x78509010,
   0x90509030,
   0x90407880,
   0xdf209060,
   0xb0729380,
   0xb3f0b4e5,
   0x7820b63b,
   0xc0809910,
   0x739367f4,
   0xb14cb10c,
   0xb0fdb13d,
   0xb14fb10f,
   0x7100b008,
   0xb914a008,
   0xb14ca914,
   0x791ea910,
   0xb9107100,
   0x80c0894f,
   0x47ee22c0,
   0x468922f0,
   0x7210a0fd,
   0xb064a044,
   0xb231b074,
   0x7232b230,
   0xa048720f,
   0xa04aa049,
   0xc200a009,
   0xb1119930,
   0x7100b0d1,
   0x8780a0d1,
   0x47132220,
   0xc1f0b0e7,
   0x7100b127,
   0xb04f6ab2,
   0xa31da4e5,
   0xc0c0b073,
   0xb04b9320,
   0xc090b041,
   0x818367f4,
   0x42bf1e03,
   0x8940895b,
   0x100c18b0,
   0x3920063c,
   0x18033133,
   0x1803c320,
   0xa9109933,
   0x99107830,
   0xb910b111,
   0x22f3b0d1,
   0x830a46fc,
   0x395a398a,
   0x313b866b,
   0x39808650,
   0x000b3950,
   0x71001204,
   0x22108090,
   0x830146fc,
   0x86638652,
   0x8b25ba3a,
   0x31253185,
   0x42f91c54,
   0x14a14af2,
   0x5ef614b2,
   0x62f61613,
   0x18b218a1,
   0x1a135af6,
   0x96529301,
   0x10549663,
   0x62dfb127,
   0xb750b233,
   0x979478d4,
   0x97a478c4,
   0xb760c0e0,
   0xa0d16b03,
   0x73a37223,
   0xd0a08af4,
   0x67f49a14,
   0x7203a0e7,
   0x73057204,
   0x72917306,
   0xa4e560c1,
   0x9930c0d0,
   0x471a1cfe,
   0x631cd6a0,
   0x0000d690,
   0xb0739380,
   0xb04bb072,
   0x97507ba0,
   0xb111a0e7,
   0xb1b3b0d1,
   0xb06f7100,
   0xb04db04f,
   0xc0c0b041,
   0xba399320,
   0x31108af0,
   0xb9609700,
   0xcf007393,
   0xb01a6b34,
   0xc0b0a00a,
   0x818367f4,
   0x43391e03,
   0x8940895b,
   0x313318b0,
   0x78e01803,
   0x99331803,
   0xb111a910,
   0x22f3b910,
   0x89a04764,
   0x1c1089a1,
   0xb0e7434a,
   0xb750b127,
   0x71001201,
   0x227080a0,
   0xb1274360,
   0x435a1e11,
   0x63511611,
   0x979089a0,
   0x97a089b0,
   0x1201b760,
   0x22108090,
   0xa0e74351,
   0xa04db233,
   0x78f4b750,
   0x790497a4,
   0xc0e09794,
   0x6b6cb760,
   0x7223a0d1,
   0x67f4c0c0,
   0x72047203,
   0x73067305,
   0x60c17291,
   0xc00dc15c,
   0xc008c00a,
   0x84aec070,
   0x6fb7c2db,
   0x6b806796,
   0x6fb7161b,
   0xc00ac070,
   0x6b866796,
   0x161b84be,
   0xc0706fb7,
   0x6796c00a,
   0x161b6b8d,
   0xc0706fb7,
   0x6796c00a,
   0x70006b93,
   0x061f10ef,
   0x148f313f,
   0x6ff214cf,
   0x39481028,
   0x002a0632,
   0x3f1a3f1a,
   0x391e6e7a,
   0xc15c7000,
   0xc008c00d,
   0x84aec0e0,
   0x10efc25b,
   0x313f061f,
   0x14cf148f,
   0x10286ff2,
   0x06323948,
   0xccca47b7,
   0x1e1263c0,
   0xcc3a47bb,
   0x1e2263c0,
   0xc3ca47bf,
   0xc33a63c0,
   0x43c42200,
   0x63c910a6,
   0x318a6fb7,
   0x6e7a006a,
   0x391e161b,
   0xb0646bab,
   0x81837000,
   0x43cd1e03,
   0x99337000,
   0x71009117,
   0x7223a35d,
   0x72917391,
   0x72047203,
   0xc0307263,
   0xffc09000,
   0x73059010,
   0x70007306,
   0x8940895b,
   0x312318b0,
   0x18131803,
   0xa9109933,
   0xb910b111,
   0x7000b0d1,
   0xa914b914,
   0xa910b14c,
   0x6292792e,
   0x89f09a00,
   0x47f52200,
   0x7000b9e0
};

PATCH_FUN_SPEC void rf_patch_mce_bt5(void)
{
#ifdef __PATCH_NO_UNROLLING
   uint32_t i;
   for (i = 0; i < 509; i++) {
      HWREG(RFC_MCERAM_BASE + 4 * i) = patchBt5Mce[i];
   }
#else
   const uint32_t *pS = patchBt5Mce;
   volatile unsigned long *pD = &HWREG(RFC_MCERAM_BASE);
   uint32_t t1, t2, t3, t4, t5, t6, t7, t8;
   uint32_t nIterations = 63;

   do {
      t1 = *pS++;
      t2 = *pS++;
      t3 = *pS++;
      t4 = *pS++;
      t5 = *pS++;
      t6 = *pS++;
      t7 = *pS++;
      t8 = *pS++;
      *pD++ = t1;
      *pD++ = t2;
      *pD++ = t3;
      *pD++ = t4;
      *pD++ = t5;
      *pD++ = t6;
      *pD++ = t7;
      *pD++ = t8;
   } while (--nIterations);

   t1 = *pS++;
   t2 = *pS++;
   t3 = *pS++;
   t4 = *pS++;
   t5 = *pS++;
   *pD++ = t1;
   *pD++ = t2;
   *pD++ = t3;
   *pD++ = t4;
   *pD++ = t5;
#endif
}

#endif
